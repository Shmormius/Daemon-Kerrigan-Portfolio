steps:
  # Build backend image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/daemon-backend:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/daemon-backend:latest'
      - './backend'
    id: 'build-backend'

  # Build frontend image  
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/daemon-frontend:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/daemon-frontend:latest'
      - './frontend'
    id: 'build-frontend'

  # Push backend image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/daemon-backend:$COMMIT_SHA']
    id: 'push-backend'
    waitFor: ['build-backend']

  # Push frontend image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/daemon-frontend:$COMMIT_SHA']
    id: 'push-frontend'
    waitFor: ['build-frontend']

  # Deploy backend service
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'daemon-backend'
      - '--image=gcr.io/$PROJECT_ID/daemon-backend:$COMMIT_SHA'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=8000'
      - '--memory=1Gi'
      - '--cpu=1'
      - '--timeout=300'
      - '--set-env-vars=AWS_REGION_BEDROCK=us-east-1'
      - '--set-secrets=AWS_ACCESS_KEY_ID=aws-access-key:latest'
      - '--set-secrets=AWS_SECRET_ACCESS_KEY=aws-secret-key:latest'
      - '--set-secrets=AWS_BEDROCK_AGENT_ID=bedrock-agent-id:latest'
      - '--set-secrets=AWS_BEDROCK_AGENT_ALIAS_ID=bedrock-agent-alias:latest'
    id: 'deploy-backend'
    waitFor: ['push-backend']

  # Get backend URL for frontend config
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        BACKEND_URL=$$(gcloud run services describe daemon-backend --region=us-central1 --format="value(status.url)")
        echo "BACKEND_URL=$$BACKEND_URL" > /workspace/backend_url.env
        echo "Backend URL: $$BACKEND_URL"
    id: 'get-backend-url'
    waitFor: ['deploy-backend']

  # Deploy frontend service
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        source /workspace/backend_url.env
        gcloud run deploy daemon-frontend \
          --image=gcr.io/$PROJECT_ID/daemon-frontend:$COMMIT_SHA \
          --region=us-central1 \
          --platform=managed \
          --allow-unauthenticated \
          --port=80 \
          --set-env-vars=VITE_API_BASE_URL=$$BACKEND_URL/api
    id: 'deploy-frontend'
    waitFor: ['push-frontend', 'get-backend-url']

  # Update backend CORS with frontend URL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        FRONTEND_URL=$$(gcloud run services describe daemon-frontend --region=us-central1 --format="value(status.url)")
        gcloud run services update daemon-backend \
          --region=us-central1 \
          --set-env-vars=CORS_ORIGINS="$$FRONTEND_URL,https://daemonkerrigan.com"
        echo "Updated CORS with frontend URL: $$FRONTEND_URL"
    id: 'update-cors'
    waitFor: ['deploy-frontend']

# Store images in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/daemon-backend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/daemon-frontend:$COMMIT_SHA'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

# Timeout for entire build
timeout: '1200s'  # 20 minutes